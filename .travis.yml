language: python

# We need a full clone to make sure setuptools_scm works properly
git:
    depth: false

os:
    - linux

dist: focal

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz


stages:
   # Do the style check and a single test job, don't proceed if it fails
   - name: Initial tests
   # Test docs, astropy dev, and without optional dependencies
   - name: Comprehensive tests
   # These will only run when cron is opted in
   - name: Cron tests
     if: type = cron

env:
    global:

        # The following versions are the 'default' for tests, unless
        # overridden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - SETUP_METHOD='tox'

        # The following three variables are for tox. TOXENV is a standard
        # variable that tox uses to determine the environment to run,
        # TOXARGS are arguments passed to tox, and TOXPOSARGS are arguments
        # that tox passes through to the {posargs} indicator in tox.ini.
        # The latter can be used for example to pass arguments to pytest.
        - TOXENV='test'
        - TOXARGS='-v'
        - TOXPOSARGS=''

        # If there are matplotlib or other GUI tests, uncomment the following
        # line to use the X virtual framebuffer.
        # - SETUP_XVFB=True

jobs:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        - name: Tests that all the basics are covered.
          stage: Initial tests
          python: 3.8
          env: TOXENV=py38-test
               TOXPOSARGS="--open-files"

        - name: Code style checks
          stage: Initial tests
          python: 3.8
          env: TOXENV=codestyle

        - name: Documentation build
          stage: Comprehensive tests
          python: 3.8
          env: TOXENV=build_docs

        - name: Coverage using oldest supported versions
          stage: Comprehensive tests
          python: 3.7
          env: TOXENV="py37-test-oldestdeps-cov"

        # Regularly try Astropy dev with the latest Python
        - name: Python 3.9 with developer version of astropy
          stage: Cron tests
          python: 3.9
          env: TOXENV=py39-test-devdeps

        # Also try the big-endian s390x architecture, in the
        # process checking that installing dependencies with apt works.
        - name: big-endian s390x architecture with apt
          stage: Comprehensive tests
          arch: s390x
          language: c
          addons:
            apt:
              packages:
              - python3-astropy
              - python3-entrypoints
              - python3-pip
          env: SETUP_METHOD='apt'

        # Try on Windows
        - os: windows
          language: c
          stage: Comprehensive tests
          name: Python 3.8 on Windows
          env: PATH=/c/Python38:/c/Python38/Scripts:$PATH
               TOXENV='py38-test'


before_install:
    # language: python is only available for Linux.
    # For Windows, we use choco to install Python.
    - if [[ $TRAVIS_OS_NAME == windows ]]; then
        choco install --no-progress python --version 3.8;
        python -m pip install --upgrade pip;
      fi
    # For OSX, we use ci-helpers to set up Python.
    - if [[ $TRAVIS_OS_NAME == osx ]]; then
        git clone git://github.com/astropy/ci-helpers.git;
        source ci-helpers/travis/setup_conda.sh;
      fi

install:
    - if [[ $SETUP_METHOD == 'tox' ]]; then
        pip install tox;
      fi

    - if [[ $TOXENV == *-cov ]]; then
        export TOXPOSARGS=$TOXPOSARGS" --cov-report=xml:"$TRAVIS_BUILD_DIR"/coverage.xml";
      fi

script:
    - if [[ $SETUP_METHOD == 'tox' ]]; then
        tox $TOXARGS -- $TOXPOSARGS;
      else
        pytest-3;
      fi

after_success:
    - if [[ $TOXENV == *-cov ]]; then
        pip install codecov;
        codecov --gcov-glob "*cextern*";
      fi
